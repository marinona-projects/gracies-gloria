{"version":3,"sources":["components/infoButtons.js","components/InfoModal.js","components/MainPage.js","components/VideoModal.js","components/OnStartModal.js","App.js","serviceWorker.js","index.js","assets/images/01.png","assets/images/02.png","assets/images/03.png","assets/images/04.png","assets/images/05.png","assets/images/06.png","assets/images/background.png","assets/images/info button.png","assets/images/info button hover.png"],"names":["buttons","id","img","button1","url","xPos","yPos","button2","button3","button4","button5","button6","infoButtonPos","InfoModal","screenSize","bgNaturalSize","bgDim","convertXToScreenRes","convertYToScreenRes","useState","imgOriginalSize","setImgOriginalSize","modalVisibility","setModalVisibility","infoButtonStyles","setInfoButtonStyles","opacity","infoButtonStylesHover","setInfoButtonStylesHover","useEffect","left","top","height","h","key","src","infoButton","onLoad","target","naturalHeight","w","naturalWidth","style","position","cursor","alt","infoButtonHover","onClick","onMouseOver","onMouseLeave","title","visible","onCancel","width","footer","MainPage","setModalVisible","window","innerWidth","innerHeight","setScreenSize","buttonNaturalSizes","setButtonNaturalSizes","setBgNaturalSize","buttonOpacities","setButtonOpacities","clickedButtons","setClickedButtons","buttonStyles","setButtonStyles","updateWindowDimensions","addEventListener","map","button","xVal","bgSize","imgWidth","leftMargin","yVal","commonButtonStyles","toggleButtonVisibility","newBtnOpacities","className","newButtonNatSizes","onButtonImgLoad","undefined","find","i","bgImage","opts","playerVars","color","controls","modestbranding","rel","VideoModal","videoUrl","ytPlayer","setYtPlayer","seekTo","playVideo","pauseVideo","videoId","onReady","event","onStateChange","data","OnStartModal","closeModal","App","modalVisible","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.bc80c3e5.chunk.js","sourcesContent":["import button1 from '../assets/images/01.png';\r\nimport button2 from '../assets/images/02.png';\r\nimport button3 from '../assets/images/03.png';\r\nimport button4 from '../assets/images/04.png';\r\nimport button5 from '../assets/images/05.png';\r\nimport button6 from '../assets/images/06.png';\r\n\r\nexport const buttons = [\r\n    {\r\n        id: 0,\r\n        img: button1,\r\n        url: 'ISnY3CujF2E', //arc de st marti\r\n        xPos: 110,\r\n        yPos: 1148\r\n    },\r\n    {\r\n        id: 1,\r\n        img: button2,\r\n        url: '8iLJL5QhBYM', //llibres prota\r\n        xPos: 703,\r\n        yPos: 1484\r\n    },\r\n    {\r\n        id: 2,\r\n        img: button3, //poster escola argentona\r\n        url: 'ZmKdKgzzn2k',\r\n        xPos: 1705,\r\n        yPos: 1301\r\n    },\r\n    {\r\n        id: 3,\r\n        img: button4,\r\n        url: 'Zs0bWn4LKjI', //lluna cove\r\n        xPos: 2365,\r\n        yPos: 1041\r\n    },\r\n    {\r\n        id: 4,\r\n        img: button5,\r\n        url: 'NynePjXVMUk', //caixa sorpreses\r\n        xPos: 3596,\r\n        yPos: 940\r\n    },\r\n    {\r\n        id: 5,\r\n        img: button6,\r\n        url: '7-nmhbdGcIQ', // postr aixernador\r\n        xPos: 3503,\r\n        yPos: 1230\r\n    },\r\n];","import React, { useState, useEffect } from 'react';\r\nimport infoButton from '../assets/images/info button.png';\r\nimport infoButtonHover from '../assets/images/info button hover.png';\r\nimport { Modal } from 'antd';\r\n\r\nconst INFO_BUTTON = 'INFO_BUTTON';\r\nconst infoButtonPos = {\r\n    xPos: 3869,\r\n    yPos: 2080\r\n}\r\n\r\nconst InfoModal = ({ screenSize, bgNaturalSize, bgDim, convertXToScreenRes, convertYToScreenRes }) => {\r\n    const [imgOriginalSize, setImgOriginalSize] = useState({});\r\n    const [modalVisibility, setModalVisibility] = useState(false);\r\n    const [infoButtonStyles, setInfoButtonStyles] = useState(null);\r\n    const [infoButtonStylesHover, setInfoButtonStylesHover] = useState({ opacity: 0 });\r\n\r\n    useEffect(() => {\r\n        if (bgNaturalSize) {\r\n            setInfoButtonStyles({\r\n                left: convertXToScreenRes(infoButtonPos.xPos),\r\n                top: convertYToScreenRes(infoButtonPos.yPos),\r\n                height: imgOriginalSize.h * screenSize.h / bgDim.h\r\n            })\r\n        }\r\n    }, [bgNaturalSize, screenSize, imgOriginalSize]);\r\n\r\n    return (\r\n        <>\r\n            <img\r\n                key={INFO_BUTTON}\r\n                src={infoButton}\r\n                onLoad={({ target: img }) => setImgOriginalSize({\r\n                    h: img.naturalHeight, w: img.naturalWidth\r\n                })}\r\n                style={{ position: 'absolute', cursor: 'pointer', ...infoButtonStyles }}\r\n                alt=\"info Button\"\r\n            />\r\n            <img\r\n                key={'INFO_BUTTON_HOVER'}\r\n                src={infoButtonHover}\r\n\r\n                style={{ position: 'absolute', cursor: 'pointer', ...infoButtonStyles, ...infoButtonStylesHover }}\r\n                alt=\"info Button hover\"\r\n                onClick={() => setModalVisibility(true)}\r\n                onMouseOver={() => setInfoButtonStylesHover({ opacity: 1 })}\r\n                onMouseLeave={() => setInfoButtonStylesHover({ opacity: 0 })}\r\n            />\r\n            <Modal\r\n                title=\"\"\r\n                visible={modalVisibility}\r\n                onCancel={() => setModalVisibility(false)}\r\n                width={600}\r\n                footer={null}\r\n            >\r\n                <p>Aquesta web ha estat creada com a recull de tots els vídeos que ens han anat arribant `com a agraïment a la Glòria ara que es jubila</p>\r\n                <h5>Crèdits</h5>\r\n                <p>Idea original: Nil i Marina Gavin</p>\r\n                <p>Il·lustració, web i edició de vídeos: Marina Gavin</p>\r\n                <p>Mil gràcies a tots els que ho heu fet possible :)</p>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InfoModal;","import React, { useState, useEffect } from 'react';\r\nimport bgImage from '../assets/images/background.png';\r\nimport { buttons } from './infoButtons';\r\n\r\nimport InfoModal from './InfoModal';\r\n\r\nconst bgDim = { w: 4000, h: 2250 };\r\n\r\nconst MainPage = ({ setModalVisible, }) => {\r\n    const [screenSize, setScreenSize] = useState({ w: window.innerWidth, h: window.innerHeight });\r\n    const [buttonNaturalSizes, setButtonNaturalSizes] = useState([]);\r\n    const [bgNaturalSize, setBgNaturalSize] = useState(null);\r\n    const [buttonOpacities, setButtonOpacities] = useState([]);\r\n    const [clickedButtons, setClickedButtons] = useState([]);\r\n    const [buttonStyles, setButtonStyles] = useState([]);\r\n\r\n    const updateWindowDimensions = () => {\r\n        setScreenSize({ w: window.innerWidth, h: window.innerHeight });\r\n    };\r\n\r\n    useEffect(() => window.addEventListener('resize', updateWindowDimensions), [buttonNaturalSizes, bgNaturalSize]);\r\n\r\n    const onBgImgLoad = ({ target: img }) => {\r\n        setBgNaturalSize({ h: img.naturalHeight, w: img.naturalWidth });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (bgNaturalSize) {\r\n            setButtonStyles(buttons.map(button => ({\r\n                left: convertXToScreenRes(button.xPos),\r\n                top: convertYToScreenRes(button.yPos),\r\n                height: buttonNaturalSizes[button.id].h * screenSize.h / bgDim.h\r\n            })));\r\n        }\r\n    }, [bgNaturalSize, screenSize, buttonNaturalSizes]);\r\n\r\n\r\n    const onButtonImgLoad = (id, img) => {\r\n        let newButtonNatSizes = buttonNaturalSizes && [...buttonNaturalSizes];\r\n        newButtonNatSizes[id] = { h: img.naturalHeight, w: img.naturalWidth };\r\n        setButtonNaturalSizes(newButtonNatSizes);\r\n    }\r\n\r\n    const getImageWidth = (bgSize) => bgSize && ((screenSize.h * bgSize.w) / bgSize.h);\r\n\r\n    //donat una X de la imatge (en pixels), vull la X de la pantalla (pot estar fora de la pantalla)\r\n    const convertXToScreenRes = (xVal) => {\r\n        const imgWidth = getImageWidth(bgNaturalSize);\r\n        if (imgWidth < screenSize.w) {\r\n            const leftMargin = (screenSize.w - imgWidth) / 2;\r\n            return (xVal * imgWidth / bgNaturalSize.w) + leftMargin\r\n        } else {\r\n            const imageStartX = -(imgWidth - screenSize.w) / 2;\r\n            return imageStartX + (xVal * imgWidth / bgNaturalSize.w);\r\n        }\r\n    }\r\n\r\n    const convertYToScreenRes = (yVal) => {\r\n        return (yVal * screenSize.h / bgNaturalSize.h);\r\n    }\r\n\r\n    const commonButtonStyles = {\r\n        position: 'absolute',\r\n        cursor: 'pointer',\r\n        opacity: 0\r\n    }\r\n\r\n    const toggleButtonVisibility = (id, visible) => {\r\n        let newBtnOpacities = [...buttonOpacities];\r\n        newBtnOpacities[id] = { opacity: visible ? 1 : 0 };\r\n        setButtonOpacities(newBtnOpacities);\r\n    }\r\n\r\n    return (\r\n        <div className=\"h-100 d-flex flex-column\">\r\n            {buttons.map(({ id, img }) => (\r\n                <img\r\n                    key={id}\r\n                    src={img}\r\n                    onLoad={({ target }) => onButtonImgLoad(id, target)}\r\n                    style={{ ...commonButtonStyles, ...buttonStyles[id], ...buttonOpacities[id] }}\r\n                    alt=\"button\"\r\n                    onClick={() => {\r\n                        setModalVisible(id);\r\n                        if (clickedButtons.find(i => i === id) === undefined) {\r\n                            toggleButtonVisibility(id, true);\r\n                            setClickedButtons([...clickedButtons, id])\r\n                        }\r\n                    }}\r\n                    onMouseOver={() => {\r\n                        if (clickedButtons.find(i => i === id) === undefined) {\r\n                            toggleButtonVisibility(id, true)\r\n                        }\r\n                    }}\r\n                    onMouseLeave={() => {\r\n                        if (clickedButtons.find(i => i === id) === undefined) {\r\n                            toggleButtonVisibility(id, false);\r\n                        }\r\n                    }}\r\n                />\r\n            ))}\r\n\r\n            <InfoModal\r\n                bgNaturalSize={bgNaturalSize}\r\n                bgDim={bgDim}\r\n                convertXToScreenRes={convertXToScreenRes}\r\n                convertYToScreenRes={convertYToScreenRes}\r\n                screenSize={screenSize}\r\n            />\r\n            <img\r\n                src={bgImage}\r\n                onLoad={onBgImgLoad}\r\n                className=\"h-100 align-self-center\"\r\n                alt=\"backgound image\"\r\n            />\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default MainPage;","import React, { useEffect, useState } from 'react';\r\nimport { Modal } from 'antd';\r\nimport YouTube from 'react-youtube';\r\n\r\nconst opts = {\r\n    // height: '390',\r\n    width: '100%',\r\n    playerVars: {\r\n        color: '#660080',\r\n        controls: 1,\r\n        modestbranding: 1,\r\n        rel: 0\r\n    },\r\n};\r\n\r\nconst VideoModal = ({ visible, key, videoUrl, setModalVisible }) => {\r\n    const [ytPlayer, setYtPlayer] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (ytPlayer) {\r\n            if (visible) {\r\n                ytPlayer.seekTo(0);\r\n                ytPlayer.playVideo();\r\n            }\r\n            else ytPlayer.pauseVideo();\r\n        }\r\n    }, [visible])\r\n\r\n    const handleReady = (event) => {\r\n        setYtPlayer(event.target);\r\n        if (visible) {\r\n            event.target.seekTo(0);\r\n            event.target.playVideo();\r\n        }\r\n    }\r\n\r\n    const handleOnStateChange = (event) => {\r\n        //close modal when video finished\r\n        if (event.data === 0) setModalVisible(false)\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title=\"\"\r\n            visible={visible}\r\n            onCancel={() => setModalVisible(null)}\r\n            width={'70%'}\r\n            footer={null}\r\n        >\r\n            <YouTube videoId={videoUrl} opts={opts} onReady={handleReady} onStateChange={handleOnStateChange} />\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default VideoModal;","import React from 'react';\r\nimport { Modal } from 'antd';\r\n\r\n\r\nconst OnStartModal = ({ visible, closeModal }) => {\r\n    return (\r\n        <Modal\r\n            title=\"\"\r\n            visible={visible}\r\n            onCancel={closeModal}\r\n            width={600}\r\n            footer={null}\r\n        >\r\n            <h1>Gràcies Glòria!</h1>\r\n            <p>Son molts els que t'han volgut donar les gràcies... així que busca en aquest espai que tant bé coneixes i trobaràs petits regals!</p>\r\n            <p>Com que sabem que això dels enigmes t'agraden...</p>\r\n            <p>No serà tant fàcil!</p>\r\n            <p>Tanca aquesta finestra i comença a jugar!</p>\r\n            <p>Anar omplint de colors la teva aula</p>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default OnStartModal;","import React, { useState } from 'react';\nimport './assets/styles/bootstrap.min.css'\nimport './App.css';\nimport 'antd/dist/antd.css';\n\nimport { buttons } from './components/infoButtons';\nimport MainPage from './components/MainPage';\nimport VideoModal from './components/VideoModal';\nimport OnStartModal from './components/OnStartModal';\n\nconst ON_START = 'ON_START';\nfunction App() {\n  const [modalVisible, setModalVisible] = useState(ON_START);\n\n\n  return (\n    <>\n      <MainPage setModalVisible={setModalVisible} />\n      {buttons.map(button =>\n        <VideoModal\n          key={button.id}\n          videoUrl={button.url}\n          visible={modalVisible === button.id}\n          setModalVisible={setModalVisible}\n        />\n      )}\n      <OnStartModal visible={modalVisible === ON_START} closeModal={() => setModalVisible(null)} />\n\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/01.a266e785.png\";","module.exports = __webpack_public_path__ + \"static/media/02.3a9ab7b7.png\";","module.exports = __webpack_public_path__ + \"static/media/03.93f415a8.png\";","module.exports = __webpack_public_path__ + \"static/media/04.64c5d6aa.png\";","module.exports = __webpack_public_path__ + \"static/media/05.fb3ab8b4.png\";","module.exports = __webpack_public_path__ + \"static/media/06.914ea944.png\";","module.exports = __webpack_public_path__ + \"static/media/background.7e9ba548.png\";","module.exports = __webpack_public_path__ + \"static/media/info button.1290a477.png\";","module.exports = __webpack_public_path__ + \"static/media/info button hover.7cd905ca.png\";"],"sourceRoot":""}