{"version":3,"sources":["components/infoButtons.js","components/ytVideoOpts.js","components/InfoModal.js","components/MainPage.js","components/VideoModal.js","components/OnStartModal.js","App.js","serviceWorker.js","index.js","assets/images/01.png","assets/images/02.png","assets/images/03.png","assets/images/04.png","assets/images/05.png","assets/images/06.png","assets/images/background.png","assets/images/info button.png","assets/images/info button hover.png"],"names":["buttons","id","img","button1","url","xPos","yPos","button2","button3","button4","button5","button6","YTOptCommon","playerVars","color","controls","modestbranding","rel","YTopts","height","width","YToptsSmall","InfoModal","screenSize","bgNaturalSize","bgDim","convertXToScreenRes","convertYToScreenRes","useState","imgOriginalSize","setImgOriginalSize","modalVisibility","setModalVisibility","infoButtonStyles","setInfoButtonStyles","opacity","infoButtonStylesHover","setInfoButtonStylesHover","ytPlayer","setYtPlayer","useEffect","right","bottom","h","pauseVideo","key","src","infoButton","onLoad","target","naturalHeight","w","naturalWidth","style","position","cursor","alt","infoButtonHover","onClick","onMouseOver","onMouseLeave","title","visible","onCancel","footer","className","backgroundColor","borderRadius","videoId","opts","onReady","event","MainPage","setModalVisible","window","innerWidth","innerHeight","setScreenSize","buttonNaturalSizes","setButtonNaturalSizes","setBgNaturalSize","buttonOpacities","setButtonOpacities","clickedButtons","setClickedButtons","buttonStyles","setButtonStyles","updateWindowDimensions","addEventListener","map","button","left","top","xVal","yVal","bgSize","imgHeight","topOffset","commonButtonStyles","zIndex","toggleButtonVisibility","newBtnOpacities","newButtonNatSizes","onButtonImgLoad","undefined","find","i","bgImage","VideoModal","videoUrl","seekTo","playVideo","onStateChange","data","OnStartModal","closeModal","isTouchscreen","message","description","type","showIcon","closable","App","modalVisible","setIsTouchscreen","removeEventListener","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","module","exports"],"mappings":"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","file":"static/js/main.ecbfa53d.chunk.js","sourcesContent":["import button1 from '../assets/images/01.png';\r\nimport button2 from '../assets/images/02.png';\r\nimport button3 from '../assets/images/03.png';\r\nimport button4 from '../assets/images/04.png';\r\nimport button5 from '../assets/images/05.png';\r\nimport button6 from '../assets/images/06.png';\r\n\r\nexport const buttons = [\r\n    {\r\n        id: 0,\r\n        img: button1,\r\n        url: 'ISnY3CujF2E', //arc de st marti\r\n        xPos: 110,\r\n        yPos: 1148\r\n    },\r\n    {\r\n        id: 1,\r\n        img: button2,\r\n        url: '8iLJL5QhBYM', //llibres prota\r\n        xPos: 703,\r\n        yPos: 1484\r\n    },\r\n    {\r\n        id: 2,\r\n        img: button3, //poster escola argentona\r\n        url: 'ZmKdKgzzn2k',\r\n        xPos: 1705,\r\n        yPos: 1301\r\n    },\r\n    {\r\n        id: 3,\r\n        img: button4,\r\n        url: 'Zs0bWn4LKjI', //lluna cove\r\n        xPos: 2365,\r\n        yPos: 1041\r\n    },\r\n    {\r\n        id: 4,\r\n        img: button5,\r\n        url: 'NynePjXVMUk', //caixa sorpreses\r\n        xPos: 3596,\r\n        yPos: 940\r\n    },\r\n    {\r\n        id: 5,\r\n        img: button6,\r\n        url: '7-nmhbdGcIQ', // postr aixernador\r\n        xPos: 3503,\r\n        yPos: 1230\r\n    },\r\n];","const YTOptCommon = {\r\n    playerVars: {\r\n        color: '#660080',\r\n        controls: 1,\r\n        modestbranding: 1,\r\n        rel: 0\r\n    },\r\n}\r\n\r\nexport const YTopts = {\r\n    height: '400',\r\n    width: '100%',\r\n    ...YTOptCommon\r\n};\r\n\r\nexport const YToptsSmall = {\r\n    height: '150',\r\n    width: '70%',\r\n    ...YTOptCommon\r\n};\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport infoButton from '../assets/images/info button.png';\r\nimport infoButtonHover from '../assets/images/info button hover.png';\r\nimport { Modal } from 'antd';\r\nimport { YToptsSmall } from './ytVideoOpts';\r\nimport YouTube from 'react-youtube';\r\n\r\nconst INFO_BUTTON = 'INFO_BUTTON';\r\nconst infoButtonPos = {\r\n    xPos: 3869,\r\n    yPos: 2080\r\n}\r\n\r\nconst InfoModal = ({ screenSize, bgNaturalSize, bgDim, convertXToScreenRes, convertYToScreenRes }) => {\r\n    const [imgOriginalSize, setImgOriginalSize] = useState({});\r\n    const [modalVisibility, setModalVisibility] = useState(false);\r\n    const [infoButtonStyles, setInfoButtonStyles] = useState(null);\r\n    const [infoButtonStylesHover, setInfoButtonStylesHover] = useState({ opacity: 0 });\r\n    const [ytPlayer, setYtPlayer] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (bgNaturalSize) {\r\n            setInfoButtonStyles({\r\n                // left: convertXToScreenRes(infoButtonPos.xPos),\r\n                right: 10,\r\n                bottom: 10,\r\n                // top: convertYToScreenRes(infoButtonPos.yPos),\r\n                height: imgOriginalSize.h * screenSize.h / bgDim.h\r\n            })\r\n        }\r\n    }, [bgNaturalSize, screenSize, imgOriginalSize]);\r\n\r\n    useEffect(() => {\r\n        if (ytPlayer) {\r\n            if (!modalVisibility) ytPlayer.pauseVideo();\r\n        }\r\n    }, [modalVisibility])\r\n\r\n    return (\r\n        <>\r\n            <img\r\n                key={INFO_BUTTON}\r\n                src={infoButton}\r\n                onLoad={({ target: img }) => setImgOriginalSize({\r\n                    h: img.naturalHeight, w: img.naturalWidth\r\n                })}\r\n                style={{ position: 'absolute', cursor: 'pointer', ...infoButtonStyles }}\r\n                alt=\"info Button\"\r\n            />\r\n            <img\r\n                key={'INFO_BUTTON_HOVER'}\r\n                src={infoButtonHover}\r\n\r\n                style={{ position: 'absolute', cursor: 'pointer', ...infoButtonStyles, ...infoButtonStylesHover }}\r\n                alt=\"info Button hover\"\r\n                onClick={() => setModalVisibility(true)}\r\n                onMouseOver={() => setInfoButtonStylesHover({ opacity: 1 })}\r\n                onMouseLeave={() => setInfoButtonStylesHover({ opacity: 0 })}\r\n            />\r\n            <Modal\r\n                title=\"\"\r\n                visible={modalVisibility}\r\n                onCancel={() => setModalVisibility(false)}\r\n                width={600}\r\n                footer={null}\r\n            >\r\n                <p>La <strong>Glòria</strong> acaba una etapa important de la seva vida i es jubila. 🎓</p>\r\n                <p>{`Som molts els que sentíem la necessitat d'acompanyar-la en aquest moment i d'agrair-li haver format part del nostre camí.`}</p>\r\n                <p>\r\n                    {`Malgrat la situació estranya que estem vivint, i amb l'ajuda màgica de la Lluna Bruna 🌙, hem trobat la manera de compartir amb ella\r\n                    aquest tancament i de dedicar-li tots unes paraules.`}\r\n                </p>\r\n\r\n                <p>\r\n                    <strong>🖱 Hi vols jugar tu també? </strong>\r\n                    {`Busca a la classe de les llunes 6 objectes que s'il·luminin i veuràs com surt un munt de gent! \r\n                    De mica en mica la classe s'anirà omplint de colors 🌈 `}\r\n                </p>\r\n\r\n                <div className=\"d-flex align-items-center p-2 mb-3\" style={{ backgroundColor: '#e8e8e8', borderRadius: 14 }}>\r\n                    <p className=\"flex-grow-2\">\r\n                        Moments divertits de la creació d'aquest projecte 😂\r\n                    </p>\r\n                    <YouTube videoId={\"KX0pVohZA1c\"} opts={YToptsSmall} className=\"w-100 flex-grow-3\" onReady={(event) => setYtPlayer(event.target)} />\r\n                </div>\r\n\r\n                <h5>Crèdits</h5>\r\n                <p>Idea original: Nil i Marina Gavin</p>\r\n                <p>Il·lustració, web i edició de vídeos: Marina Gavin</p>\r\n                <div className=\"text-center\">\r\n                    <strong>Mil gràcies a tots els que ho heu fet possible 🥰</strong>\r\n                </div>\r\n                <div className=\"text-right\">\r\n                    <small>Juny, 2020</small>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InfoModal;","import React, { useState, useEffect } from 'react';\r\nimport bgImage from '../assets/images/background.png';\r\nimport { buttons } from './infoButtons';\r\n\r\nimport InfoModal from './InfoModal';\r\n\r\nconst bgDim = { w: 4000, h: 2250 };\r\n\r\nconst MainPage = ({ setModalVisible, }) => {\r\n    const [screenSize, setScreenSize] = useState({ w: window.innerWidth, h: window.innerHeight });\r\n    const [buttonNaturalSizes, setButtonNaturalSizes] = useState([]);\r\n    const [bgNaturalSize, setBgNaturalSize] = useState(null);\r\n    const [buttonOpacities, setButtonOpacities] = useState([]);\r\n    const [clickedButtons, setClickedButtons] = useState([]);\r\n    const [buttonStyles, setButtonStyles] = useState([]);\r\n\r\n    const updateWindowDimensions = () => {\r\n        setScreenSize({ w: window.innerWidth, h: window.innerHeight });\r\n    };\r\n\r\n    useEffect(() => window.addEventListener('resize', updateWindowDimensions), [buttonNaturalSizes, bgNaturalSize]);\r\n\r\n    const onBgImgLoad = ({ target: img }) => {\r\n        setBgNaturalSize({ h: img.naturalHeight, w: img.naturalWidth });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (bgNaturalSize) {\r\n            setButtonStyles(buttons.map(button => ({\r\n                left: convertXToScreenRes(button.xPos),\r\n                top: convertYToScreenRes(button.yPos),\r\n                width: buttonNaturalSizes[button.id].w * screenSize.w / bgDim.w\r\n            })));\r\n        }\r\n    }, [bgNaturalSize, screenSize, buttonNaturalSizes]);\r\n\r\n\r\n    const onButtonImgLoad = (id, img) => {\r\n        let newButtonNatSizes = buttonNaturalSizes && [...buttonNaturalSizes];\r\n        newButtonNatSizes[id] = { h: img.naturalHeight, w: img.naturalWidth };\r\n        setButtonNaturalSizes(newButtonNatSizes);\r\n    }\r\n\r\n    // const getImageWidth = (bgSize) => bgSize && ((screenSize.h * bgSize.w) / bgSize.h);\r\n    const getImageHeight = (bgSize) => bgSize && ((screenSize.w * bgSize.h) / bgSize.w);\r\n\r\n    //donat una X de la imatge (en pixels), vull la X de la pantalla (pot estar fora de la pantalla)\r\n    const convertXToScreenRes = (xVal) => {\r\n        return (xVal * screenSize.w / bgNaturalSize.w);\r\n    }\r\n\r\n    const convertYToScreenRes = (yVal) => {\r\n        const imgHeight = getImageHeight(bgNaturalSize);\r\n        let topOffset = 0;\r\n        if (imgHeight > screenSize.h) {\r\n            topOffset = screenSize.h - imgHeight;\r\n        }\r\n\r\n        return topOffset + (yVal * imgHeight / bgNaturalSize.h)\r\n    }\r\n\r\n    const commonButtonStyles = {\r\n        position: 'absolute',\r\n        cursor: 'pointer',\r\n        opacity: 0,\r\n        zIndex: 1\r\n    }\r\n\r\n    const toggleButtonVisibility = (id, visible) => {\r\n        let newBtnOpacities = [...buttonOpacities];\r\n        newBtnOpacities[id] = { opacity: visible ? 1 : 0 };\r\n        setButtonOpacities(newBtnOpacities);\r\n    }\r\n\r\n    return (\r\n        <div className=\"w-100 d-flex flex-row\">\r\n            {buttons.map(({ id, img }) => (\r\n                <img\r\n                    key={id}\r\n                    src={img}\r\n                    onLoad={({ target }) => onButtonImgLoad(id, target)}\r\n                    style={{ ...commonButtonStyles, ...buttonStyles[id], ...buttonOpacities[id] }}\r\n                    alt=\"button\"\r\n                    onClick={() => {\r\n                        setModalVisible(id);\r\n                        if (clickedButtons.find(i => i === id) === undefined) {\r\n                            toggleButtonVisibility(id, true);\r\n                            setClickedButtons([...clickedButtons, id])\r\n                        }\r\n                    }}\r\n                    onMouseOver={() => {\r\n                        if (clickedButtons.find(i => i === id) === undefined) {\r\n                            toggleButtonVisibility(id, true)\r\n                        }\r\n                    }}\r\n                    onMouseLeave={() => {\r\n                        if (clickedButtons.find(i => i === id) === undefined) {\r\n                            toggleButtonVisibility(id, false);\r\n                        }\r\n                    }}\r\n                />\r\n            ))}\r\n\r\n            <InfoModal\r\n                bgNaturalSize={bgNaturalSize}\r\n                bgDim={bgDim}\r\n                convertXToScreenRes={convertXToScreenRes}\r\n                convertYToScreenRes={convertYToScreenRes}\r\n                screenSize={screenSize}\r\n            />\r\n            <img\r\n                src={bgImage}\r\n                onLoad={onBgImgLoad}\r\n                className=\"w-100 align-self-center\"\r\n                alt=\"backgound image\"\r\n                style={{ position: 'absolute', bottom: 0 }}\r\n            />\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default MainPage;","import React, { useEffect, useState } from 'react';\r\nimport { Modal } from 'antd';\r\nimport YouTube from 'react-youtube';\r\nimport { YTopts } from './ytVideoOpts';\r\n\r\n\r\n\r\nconst VideoModal = ({ visible, key, videoUrl, setModalVisible }) => {\r\n    const [ytPlayer, setYtPlayer] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (ytPlayer) {\r\n            if (visible) {\r\n                ytPlayer.seekTo(0);\r\n                ytPlayer.playVideo();\r\n            }\r\n            else ytPlayer.pauseVideo();\r\n        }\r\n    }, [visible])\r\n\r\n    const handleReady = (event) => {\r\n        setYtPlayer(event.target);\r\n        if (visible) {\r\n            event.target.seekTo(0);\r\n            event.target.playVideo();\r\n        }\r\n    }\r\n\r\n    const handleOnStateChange = (event) => {\r\n        //close modal when video finished\r\n        if (event.data === 0) setModalVisible(false)\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title=\"\"\r\n            visible={visible}\r\n            onCancel={() => setModalVisible(null)}\r\n            width={800}\r\n            footer={null}\r\n            style={{ height: '90%' }}\r\n        >\r\n            <YouTube videoId={videoUrl} opts={YTopts} onReady={handleReady} onStateChange={handleOnStateChange} />\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default VideoModal;","import React, { useEffect, useState } from 'react';\r\nimport { Modal, Alert } from 'antd';\r\nimport { YTopts } from './ytVideoOpts';\r\nimport YouTube from 'react-youtube';\r\n\r\n\r\nconst OnStartModal = ({ visible, closeModal, isTouchscreen }) => {\r\n    const [ytPlayer, setYtPlayer] = useState(null);\r\n\r\n    const handleOnStateChange = (event) => {\r\n        //close modal when video finished\r\n        if (event.data === 0) closeModal()\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (ytPlayer) {\r\n            if (!visible) ytPlayer.pauseVideo();\r\n        }\r\n    }, [visible])\r\n\r\n    return (\r\n        <Modal\r\n            title=\"\"\r\n            visible={visible}\r\n            onCancel={closeModal}\r\n            width={600}\r\n            footer={null}\r\n        >\r\n\r\n            <h1>Trucada inesperada...</h1>\r\n            <Alert\r\n                message=\"Aquesta web està pensada per veure's des d'un ordinador! 🖥🖱\"\r\n                description=\"La il·lustració té molts detalls i els objectes d'il·luminen al passar el ratolí per sobre (aquest efecte es perd amb la pantalla tàctil)\"\r\n                type=\"warning\"\r\n                showIcon\r\n                closable\r\n                className=\"mb-3\"\r\n            />\r\n            <YouTube\r\n                videoId={\"MjXFP3kpdbA\"}\r\n                opts={YTopts}\r\n                onReady={(event) => setYtPlayer(event.target)}\r\n                onStateChange={handleOnStateChange}\r\n            />\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default OnStartModal;","import React, { useState, useEffect } from 'react';\nimport './assets/styles/bootstrap.min.css'\nimport './App.css';\nimport 'antd/dist/antd.css';\n\nimport { buttons } from './components/infoButtons';\nimport MainPage from './components/MainPage';\nimport VideoModal from './components/VideoModal';\nimport OnStartModal from './components/OnStartModal';\n\nconst ON_START = 'ON_START';\nfunction App() {\n  const [modalVisible, setModalVisible] = useState(ON_START);\n\n  const [isTouchscreen, setIsTouchscreen] = useState(true);\n\n  useEffect(() => {\n    window.addEventListener(\"touchstart\", () => setIsTouchscreen(true));\n    return () => window.removeEventListener(\"touchstart\", setIsTouchscreen);\n  }, []);\n\n\n  return (\n    <>\n      <MainPage setModalVisible={setModalVisible} />\n      {buttons.map(button =>\n        <VideoModal\n          key={button.id}\n          videoUrl={button.url}\n          visible={modalVisible === button.id}\n          setModalVisible={setModalVisible}\n        />\n      )}\n      <OnStartModal visible={modalVisible === ON_START} closeModal={() => setModalVisible(null)} isTouchscreen={isTouchscreen} />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/01.a266e785.png\";","module.exports = __webpack_public_path__ + \"static/media/02.3a9ab7b7.png\";","module.exports = __webpack_public_path__ + \"static/media/03.93f415a8.png\";","module.exports = __webpack_public_path__ + \"static/media/04.64c5d6aa.png\";","module.exports = __webpack_public_path__ + \"static/media/05.fb3ab8b4.png\";","module.exports = __webpack_public_path__ + \"static/media/06.914ea944.png\";","module.exports = __webpack_public_path__ + \"static/media/background.7e9ba548.png\";","module.exports = __webpack_public_path__ + \"static/media/info button.1290a477.png\";","module.exports = __webpack_public_path__ + \"static/media/info button hover.7cd905ca.png\";"],"sourceRoot":""}